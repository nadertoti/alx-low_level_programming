#include "lists.h"
#include <stdio.h>
#include <stdlib.h>

/**
 * print_listint_safe - Prints a listint_t linked list safely.
 * @head: A pointer to the head of the list.
 *
 * Return: The number of nodes in the list.
 */
size_t print_listint_safe(const listint_t *head)
{
    const listint_t *current = head;
    size_t count = 0;
    const listint_t *temp = NULL;

    while (current != NULL)
    {
        printf("[%p] %d\n", (void *)current, current->n);
        count++;

        temp = current;
        current = current->next;

        if (temp <= current)
        {
            printf("-> [%p] %d\n", (void *)current, current->n);
            break;
        }
    }

    return (count);
}

int main(void)
{
    listint_t *head = NULL;
    size_t n_nodes;

    /* Example: Create a list with a loop */
    head = malloc(sizeof(listint_t));
    if (head == NULL)
    {
        printf("Memory allocation failed\n");
        return (98);
    }
    head->n = 1;
    head->next = head;

    n_nodes = print_listint_safe(head);
    printf("Number of nodes in the list: %lu\n", n_nodes);

    /* Free the list */
    free_listint_safe(&head);

    return (0);
}
